@{
    ViewBag.Title = "合約簽屬";
    Layout = "~/Views/Shared/_NavigationBar.cshtml";
    var contract = ViewBag.Contract;
    var property = ViewBag.Property;
    var cart = ViewBag.Cart;
    var cartItems = ViewBag.CartItems as List<FurnitureCartItem>;
    var totalDays = (int?)ViewBag.TotalDays ?? 0;
    var member = ViewBag.CurrentMember;
}
<style>
    .modal-backdrop-custom {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0,0,0,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
    }

    .modal-content-custom {
        background-color: #fff;
        padding: 20px 30px;
        border-radius: 10px;
        text-align: center;
        font-size: 1.2rem;
        box-shadow: 0 2px 10px rgba(0,0,0,0.2);
    }


    .modal-content-custom {
        background-color: #fff;
        padding: 20px 30px;
        border-radius: 10px;
        text-align: center;
        font-size: 1.2rem;
        box-shadow: 0 2px 10px rgba(0,0,0,0.2);
    }
</style>

<div class="card p-4">
    <h2 class="text-center mb-4">家具租借合約書</h2>

    <div class="mb-4">
        <strong>合約編號：</strong> CT-@contract.ContractId <br />
        <strong>訂單編號：</strong> ORD-@cart.FurnitureCartId <br />
        <strong>簽訂日期：</strong> @DateTime.Now.ToString("yyyy-MM-dd")
    </div>

    <h5>一、租賃雙方資訊</h5>
    <p><strong>出租人（甲方）：</strong> zuHouse 家具租賃平台</p>
    <p><strong>承租人（乙方）：</strong> @member.MemberName - @member.Email - @member.PhoneNumber</p>


    <h5 class="mt-4">房源資訊</h5>
    <p><strong>房屋標題：</strong> @property.Title</p>
    <p><strong>房屋地址：</strong> @property.AddressLine</p>
    <p><strong>租期起始日：</strong> @contract.StartDate.ToString("yyyy-MM-dd")</p>
    <p><strong>租期結束日：</strong> @contract.EndDate.ToString("yyyy-MM-dd")</p>

    <h5 class="mt-4">二、租賃家具資訊</h5>
    <p><strong>家具承租起始日：</strong> @DateTime.Today.ToString("yyyy-MM-dd") </p>
    <p><strong>家具承租結束日：</strong> @contract.EndDate.ToString("yyyy-MM-dd")</p>
    <p><strong>總租期：</strong> @totalDays 天</p>
    @{
        decimal totalRentalFee = 0m;
        int deliveryFee = 3000;
    }
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>商品名稱</th>
                <th>每日租金</th>
                <th>數量</th>
                <th>租期</th>
                <th>小計</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in cartItems)
            {
                var product = item.Product;
                var dailyRental = product.DailyRental;
                var quantity = item.Quantity;
                var subtotal = dailyRental * quantity * totalDays;
                totalRentalFee += subtotal;
                <tr>
                    <td>@product.ProductName</td>
                    <td>NT$@dailyRental</td>
                    <td>@quantity</td>
                    <td>@totalDays 天</td>
                    <td>NT$@subtotal.ToString("N0")</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="text-end mt-3">
        <p><strong>總租金：</strong> NT$@totalRentalFee.ToString("N0")</p>
        <p><strong>搬運費：</strong> NT$@deliveryFee.ToString("N0")</p>
        <p class="fs-5 text-danger"><strong>合計金額：</strong> NT$@((totalRentalFee + deliveryFee).ToString("N0"))</p>
    </div>


    <h5 class="mt-4">三、付款方式</h5>
    <p><strong>付款方式：</strong> 第三方金流</p>
    <p><strong>付款日期：</strong> @DateTime.Now.ToString("yyyy-MM-dd")</p>

    <h5 class="mt-4">四、配送與安裝</h5>
    <p><strong>配送日期：</strong> @DateTime.Now.AddDays(2).ToString("yyyy-MM-dd")</p>
    <p><strong>安裝服務：</strong> 免費安裝</p>

    <h5 class="mt-4">五、承租人責任與限制</h5>
    <ul>
        <li>承租人須妥善使用，如有損壞需賠償</li>
        <li>不得轉租或轉讓家具</li>
        <li>提前解約需支付總額 30% 作為違約金</li>
    </ul>

    <h5 class="mt-4">六、退租與取消</h5>
    <ul>
        <li>未滿7日可無條件退還，需負擔運費</li>
        <li>申請退租需提前7日告知平台</li>
    </ul>

    <h5 class="mt-4">七、其他條款</h5>
    <p><strong>甲方代表：</strong> zuHouse 發單單位</p>
    <div style="margin-bottom: 20px;">
        <label><strong>乙方簽名：</strong></label>
        <br />
        <canvas id="signaturePad" width="500" height="200" style="border:1px solid #ccc;"></canvas>
        <br />
        <button type="button" onclick="clearSignature()">清除簽名</button>
        <input type="hidden" id="signatureImage" name="signatureImage" />
    </div>

    <div class="form-check mb-3">
        <input type="checkbox" id="agreeTerms" class="form-check-input" />
        <label class="form-check-label" for="agreeTerms">我已詳細閱讀並同意上述合約內容</label>
    </div>

    <div style="margin-top: 20px;">
        <form id="stripeForm" method="post" action="/Furniture/CreateCheckoutSession">
            <input type="hidden" name="furnitureCartId" value="@ViewBag.FurnitureCartId" />
            <input type="hidden" name="totalAmount" value="@(totalRentalFee + deliveryFee)" />
            <button id="confirmBtn" type="button" class="btn btn-primary"> Stripe 付款</button>
        </form>
    </div>


</div>

@section Scripts {
    <script>
        const canvas = document.getElementById("signaturePad");
        const ctx = canvas.getContext("2d");
        let drawing = false;
        let hasSigned = false;
        const checkbox = document.getElementById("agreeTerms");
        const confirmBtn = document.getElementById("confirmBtn");
        const previewContainer = document.createElement("div");
        let signatureImg = null;

        canvas.insertAdjacentElement("afterend", previewContainer);

        function updateButtonState() {
            confirmBtn.disabled = !(checkbox.checked && hasSigned);
        }

        function showSignaturePreview() {
            if (signatureImg) signatureImg.remove();
            const dataURL = canvas.toDataURL("image/png");
            signatureImg = document.createElement("img");
            signatureImg.src = dataURL;
            signatureImg.style.width = "250px";
            signatureImg.style.height = "100px";
            signatureImg.style.border = "1px solid #ccc";
            signatureImg.style.marginTop = "10px";
            previewContainer.innerHTML = "<p><strong>簽名預覽：</strong></p>";
            previewContainer.appendChild(signatureImg);
        }

        function clearPreview() {
            previewContainer.innerHTML = "";
            if (signatureImg) {
                signatureImg.remove();
                signatureImg = null;
            }
        }

        canvas.addEventListener("mousedown", () => drawing = true);
        canvas.addEventListener("mouseup", () => {
            drawing = false;
            ctx.beginPath();
        });
        canvas.addEventListener("mousemove", draw);
        canvas.addEventListener("mouseleave", () => drawing = false);

        function draw(event) {
            if (!drawing) return;
            const rect = canvas.getBoundingClientRect();
            ctx.lineWidth = 2;
            ctx.lineCap = "round";
            ctx.strokeStyle = "black";
            ctx.lineTo(event.clientX - rect.left, event.clientY - rect.top);
            ctx.stroke();
            ctx.beginPath();
            ctx.moveTo(event.clientX - rect.left, event.clientY - rect.top);
            hasSigned = true;
            updateButtonState();
            showSignaturePreview();
        }

        function clearSignature() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            hasSigned = false;
            updateButtonState();
            clearPreview();
        }

        function isCanvasBlank(c) {
            const blank = document.createElement("canvas");
            blank.width = c.width;
            blank.height = c.height;
            return c.toDataURL() === blank.toDataURL();
        }

        checkbox.addEventListener("change", updateButtonState);
        document.querySelector("button[onclick='clearSignature()']").addEventListener("click", clearSignature);

        window.addEventListener("DOMContentLoaded", () => {
            confirmBtn.disabled = true;
        });

        // 點擊送出
        confirmBtn.addEventListener("click", function () {
            if (!checkbox.checked) {
                alert("請勾選同意合約條款");
                return;
            }
            if (isCanvasBlank(canvas)) {
                alert("請先簽名再進行提交");
                return;
            }

            confirmBtn.disabled = true;
            confirmBtn.innerHTML = "⏳ 上傳簽名中...";

            const dataURL = canvas.toDataURL("image/png");

            fetch("/Furniture/SaveSignature", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    signatureDataUrl: dataURL,
                    selectedPropertyId: @ViewBag.SelectedPropertyId
                })
            })
            .then(res => {
                if (res.ok) {
                    return fetch("/Furniture/BeforeStripePayment", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ selectedPropertyId: @ViewBag.SelectedPropertyId })
                    });
                } else {
                    throw new Error("簽名儲存失敗");
                }
            })
            .then(res => {
                if (res.ok) {
                    let countdown = 3;
                    confirmBtn.innerHTML = `✔ 簽名成功！即將跳轉 (${countdown})`;
                    const interval = setInterval(() => {
                        countdown--;
                        if (countdown <= 0) {
                            clearInterval(interval);
                            document.getElementById("stripeForm").submit();
                        } else {
                            confirmBtn.innerHTML = `✔ 簽名成功！即將跳轉 (${countdown})`;
                        }
                    }, 1000);
                } else {
                    throw new Error("付款前暫存失敗");
                }
            })
            .catch(err => {
                alert("發生錯誤：" + err.message);
                confirmBtn.disabled = false;
                confirmBtn.innerHTML = "💳 使用 Stripe 測試付款";
            });
        });
    </script>
}




