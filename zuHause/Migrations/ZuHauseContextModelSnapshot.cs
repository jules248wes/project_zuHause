// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using zuHause.Models;

#nullable disable

namespace zuHause.Migrations
{
    [DbContext(typeof(ZuHauseContext))]
    partial class ZuHauseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence<int>("seq_memberID");

            modelBuilder.Entity("zuHause.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("adminID")
                        .HasComment("管理員ID");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("account")
                        .HasComment("帳號");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deletedAt")
                        .HasComment("刪除時間");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否啟用");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("lastLoginAt")
                        .HasComment("最後登入時間");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name")
                        .HasComment("姓名");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("passwordHash")
                        .HasComment("密碼雜湊");

                    b.Property<string>("PasswordSalt")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("passwordSalt")
                        .HasComment("密碼 Salt");

                    b.Property<DateTime?>("PasswordUpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("passwordUpdatedAt")
                        .HasComment("密碼更新時間");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("roleCode")
                        .HasComment("角色代碼");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("AdminId");

                    b.HasIndex("RoleCode");

                    b.ToTable("admins", null, t =>
                        {
                            t.HasComment("管理員資料");
                        });
                });

            modelBuilder.Entity("zuHause.Models.AdminMessageTemplate", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("templateID")
                        .HasComment("模板ID(自動遞增)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemplateId"));

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("categoryCode")
                        .HasComment("模板類別代碼");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否啟用");

                    b.Property<string>("TemplateContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("templateContent")
                        .HasComment("內容");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("title")
                        .HasComment("標題");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("TemplateId");

                    b.ToTable("adminMessageTemplates", null, t =>
                        {
                            t.HasComment("後台訊息模板表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.AdminRole", b =>
                {
                    b.Property<string>("RoleCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("roleCode")
                        .HasComment("角色代碼");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否啟用");

                    b.Property<string>("PermissionsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("permissionsJSON")
                        .HasComment("權限JSON");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("roleName")
                        .HasComment("角色名稱");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("RoleCode");

                    b.ToTable("adminRoles", null, t =>
                        {
                            t.HasComment("管理員角色資料");
                        });
                });

            modelBuilder.Entity("zuHause.Models.ApplicationStatusLog", b =>
                {
                    b.Property<int>("StatusLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("statusLogID")
                        .HasComment("狀態歷程ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusLogId"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("applicationID")
                        .HasComment("申請ID");

                    b.Property<DateTime>("ChangedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("changedAt")
                        .HasComment("進入狀態時間");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note")
                        .HasComment("備註");

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("statusCode")
                        .HasComment("狀態代碼");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("StatusLogId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("applicationStatusLogs", null, t =>
                        {
                            t.HasComment("申請狀態歷程表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.Approval", b =>
                {
                    b.Property<int>("ApprovalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("approvalID")
                        .HasComment("審核ID (自動遞增，從701開始)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApprovalId"));

                    b.Property<int>("ApplicantMemberId")
                        .HasColumnType("int")
                        .HasColumnName("applicantMemberID")
                        .HasComment("申請會員ID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<int?>("CurrentApproverId")
                        .HasColumnType("int")
                        .HasColumnName("currentApproverID")
                        .HasComment("審核人員ID");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("moduleCode")
                        .HasComment("模組代碼");

                    b.Property<int?>("SourcePropertyId")
                        .HasColumnType("int")
                        .HasColumnName("sourcePropertyID")
                        .HasComment("審核房源ID");

                    b.Property<string>("StatusCategory")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("statusCategory")
                        .HasComputedColumnSql("(CONVERT([nvarchar](20),N'APPROVAL_STATUS'))", true)
                        .HasComment("狀態類別 (計算欄位)");

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("statusCode")
                        .HasComment("審核狀態碼");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("ApprovalId");

                    b.HasIndex("SourcePropertyId");

                    b.HasIndex(new[] { "ApplicantMemberId" }, "IX_approvals_applicantMemberID");

                    b.HasIndex(new[] { "CreatedAt" }, "IX_approvals_createdAt");

                    b.HasIndex(new[] { "CurrentApproverId" }, "IX_approvals_currentApproverID");

                    b.HasIndex(new[] { "ModuleCode" }, "IX_approvals_moduleCode");

                    b.HasIndex(new[] { "StatusCode" }, "IX_approvals_statusCode");

                    b.HasIndex(new[] { "StatusCategory", "StatusCode" }, "IX_approvals_status_category");

                    b.HasIndex(new[] { "ModuleCode", "ApplicantMemberId", "SourcePropertyId" }, "UQ_approvals_member_module")
                        .IsUnique()
                        .HasFilter("[sourcePropertyID] IS NOT NULL");

                    b.ToTable("approvals", null, t =>
                        {
                            t.HasComment("審核主檔");

                            t.HasTrigger("trg_approvals_status_sync");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("zuHause.Models.ApprovalItem", b =>
                {
                    b.Property<int>("ApprovalItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("approvalItemID")
                        .HasComment("審核明細ID (自動遞增，從801開始)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApprovalItemId"));

                    b.Property<int?>("ActionBy")
                        .HasColumnType("int")
                        .HasColumnName("actionBy")
                        .HasComment("操作者ID");

                    b.Property<string>("ActionCategory")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("actionCategory")
                        .HasComputedColumnSql("(CONVERT([nvarchar](20),N'APPROVAL_ACTION'))", true)
                        .HasComment("操作類別 (計算欄位)");

                    b.Property<string>("ActionNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("actionNote")
                        .HasComment("內部操作備註");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("actionType")
                        .HasComment("操作類型");

                    b.Property<int>("ApprovalId")
                        .HasColumnType("int")
                        .HasColumnName("approvalID")
                        .HasComment("審核ID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<string>("SnapshotJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("snapshotJSON")
                        .HasComment("審核快照JSON");

                    b.HasKey("ApprovalItemId");

                    b.HasIndex(new[] { "ActionBy" }, "IX_approvalItems_actionBy");

                    b.HasIndex(new[] { "ActionType" }, "IX_approvalItems_actionType");

                    b.HasIndex(new[] { "ActionCategory", "ActionType" }, "IX_approvalItems_action_category");

                    b.HasIndex(new[] { "ApprovalId" }, "IX_approvalItems_approvalID");

                    b.HasIndex(new[] { "CreatedAt" }, "IX_approvalItems_createdAt");

                    b.ToTable("approvalItems", null, t =>
                        {
                            t.HasComment("審核明細");
                        });
                });

            modelBuilder.Entity("zuHause.Models.CarouselImage", b =>
                {
                    b.Property<int>("CarouselImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("carouselImageId")
                        .HasComment("圖片ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarouselImageId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("category")
                        .HasComment("分類");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deletedAt")
                        .HasComment("刪除時間");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("displayOrder")
                        .HasComment("顯示順序");

                    b.Property<DateTime?>("EndAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("endAt")
                        .HasComment("結束時間");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("imageUrl")
                        .HasComment("圖片URL");

                    b.Property<string>("ImagesName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("imagesName")
                        .HasComment("名稱");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否啟用");

                    b.Property<string>("PageCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pageCode")
                        .HasComment("頁面識別碼");

                    b.Property<DateTime?>("StartAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("startAt")
                        .HasComment("開始時間");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("CarouselImageId");

                    b.HasIndex("PageCode");

                    b.HasIndex(new[] { "StartAt", "EndAt" }, "IX_carouselImages_active_time");

                    b.ToTable("carouselImages", null, t =>
                        {
                            t.HasComment("輪播圖片表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.Chatroom", b =>
                {
                    b.Property<int>("ChatroomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("chatroomID")
                        .HasComment("聊天室ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChatroomId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<int>("InitiatorMemberId")
                        .HasColumnType("int")
                        .HasColumnName("initiatorMemberID")
                        .HasComment("發起人會員ID");

                    b.Property<DateTime?>("LastMessageAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("lastMessageAt")
                        .HasComment("最後訊息時間");

                    b.Property<int>("ParticipantMemberId")
                        .HasColumnType("int")
                        .HasColumnName("participantMemberID")
                        .HasComment("參與者會員ID");

                    b.Property<int?>("PropertyId")
                        .HasColumnType("int")
                        .HasColumnName("propertyID")
                        .HasComment("房源ID");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("ChatroomId");

                    b.HasIndex("ParticipantMemberId");

                    b.HasIndex("PropertyId");

                    b.HasIndex(new[] { "LastMessageAt" }, "IX_chatrooms_lastmsg");

                    b.HasIndex(new[] { "InitiatorMemberId", "ParticipantMemberId" }, "UQ_chatrooms_members")
                        .IsUnique();

                    b.ToTable("chatrooms", null, t =>
                        {
                            t.HasComment("聊天室");
                        });
                });

            modelBuilder.Entity("zuHause.Models.ChatroomMessage", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("messageID")
                        .HasComment("訊息ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<int>("ChatroomId")
                        .HasColumnType("int")
                        .HasColumnName("chatroomID")
                        .HasComment("聊天室ID");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit")
                        .HasColumnName("isRead")
                        .HasComment("是否已讀");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("messageContent")
                        .HasComment("內容");

                    b.Property<DateTime?>("ReadAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("readAt")
                        .HasComment("已讀時間");

                    b.Property<int>("SenderMemberId")
                        .HasColumnType("int")
                        .HasColumnName("senderMemberID")
                        .HasComment("發送者會員ID");

                    b.Property<DateTime>("SentAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("sentAt")
                        .HasComment("傳送時間");

                    b.HasKey("MessageId");

                    b.HasIndex("SenderMemberId");

                    b.HasIndex(new[] { "ChatroomId", "SentAt" }, "IX_chatroomMessages_chat_time");

                    b.ToTable("chatroomMessages", null, t =>
                        {
                            t.HasComment("聊天室訊息");
                        });
                });

            modelBuilder.Entity("zuHause.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cityId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cityCode")
                        .HasComment("縣市代碼");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cityName")
                        .HasComment("縣市名稱");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("displayOrder")
                        .HasComment("排序");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否啟用");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("CityId");

                    b.HasIndex(new[] { "CityCode" }, "UQ_cities_cityCode")
                        .IsUnique();

                    b.ToTable("cities", null, t =>
                        {
                            t.HasComment("縣市代碼表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("contractId")
                        .HasComment("合約ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractId"));

                    b.Property<int?>("CleaningFee")
                        .HasColumnType("int")
                        .HasColumnName("cleaningFee")
                        .HasComment("清潔費");

                    b.Property<string>("CourtJurisdiction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("courtJurisdiction")
                        .HasComment("管轄法院");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<int?>("DepositAmount")
                        .HasColumnType("int")
                        .HasColumnName("depositAmount")
                        .HasComment("押金金額");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("endDate")
                        .HasComment("合約結束日");

                    b.Property<bool>("IsSublettable")
                        .HasColumnType("bit")
                        .HasColumnName("isSublettable")
                        .HasComment("是否可轉租");

                    b.Property<int?>("ManagementFee")
                        .HasColumnType("int")
                        .HasColumnName("managementFee")
                        .HasComment("管理費");

                    b.Property<int?>("ParkingFee")
                        .HasColumnType("int")
                        .HasColumnName("parkingFee")
                        .HasComment("停車費");

                    b.Property<int?>("PenaltyAmount")
                        .HasColumnType("int")
                        .HasColumnName("penaltyAmount")
                        .HasComment("違約金金額");

                    b.Property<int?>("RentalApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("rentalApplicationId")
                        .HasComment("申請編號ID");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("startDate")
                        .HasComment("合約起始日");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status")
                        .HasComment("合約狀態");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("templateId")
                        .HasComment("合約範本編號");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.Property<string>("UsagePurpose")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("usagePurpose")
                        .HasComment("使用目的");

                    b.HasKey("ContractId");

                    b.HasIndex("RentalApplicationId");

                    b.HasIndex("TemplateId");

                    b.HasIndex(new[] { "Status", "StartDate", "EndDate" }, "IX_contracts_status_dates");

                    b.ToTable("contracts", null, t =>
                        {
                            t.HasComment("合約欄位儲存表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.ContractComment", b =>
                {
                    b.Property<int>("ContractCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("contractCommentId")
                        .HasComment("合約備註ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractCommentId"));

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("commentText")
                        .HasComment("內容");

                    b.Property<string>("CommentType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("commentType")
                        .HasComment("備註類型");

                    b.Property<int>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("contractId")
                        .HasComment("合約ID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("createdById")
                        .HasComment("建立者");

                    b.HasKey("ContractCommentId");

                    b.HasIndex("ContractId");

                    b.ToTable("contractComments", null, t =>
                        {
                            t.HasComment("合約備註表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.ContractCustomField", b =>
                {
                    b.Property<int>("ContractCustomFieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("contractCustomFieldId")
                        .HasComment("動態欄位ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractCustomFieldId"));

                    b.Property<int>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("contractId")
                        .HasComment("合約ID");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("displayOrder")
                        .HasComment("顯示順序");

                    b.Property<string>("FieldKey")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("fieldKey")
                        .HasComment("動態欄位名稱");

                    b.Property<string>("FieldType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("fieldType")
                        .HasComment("動態欄位型態");

                    b.Property<string>("FieldValue")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fieldValue")
                        .HasComment("動態欄位值");

                    b.HasKey("ContractCustomFieldId");

                    b.HasIndex("ContractId");

                    b.ToTable("contractCustomFields", null, t =>
                        {
                            t.HasComment("合約附表(動態欄位)");
                        });
                });

            modelBuilder.Entity("zuHause.Models.ContractFurnitureItem", b =>
                {
                    b.Property<int>("ContractFurnitureItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("contractFurnitureItemId")
                        .HasComment("家具清單ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractFurnitureItemId"));

                    b.Property<int?>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount")
                        .HasComment("小計");

                    b.Property<int>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("contractId")
                        .HasComment("合約ID");

                    b.Property<string>("FurnitureCondition")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("furnitureCondition")
                        .HasComment("家具狀況");

                    b.Property<string>("FurnitureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("furnitureName")
                        .HasComment("家具名稱");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity")
                        .HasComment("數量");

                    b.Property<string>("RepairChargeOwner")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("repairChargeOwner")
                        .HasComment("修繕費負責人");

                    b.Property<string>("RepairResponsibility")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("repairResponsibility")
                        .HasComment("維修權責");

                    b.Property<int?>("UnitPrice")
                        .HasColumnType("int")
                        .HasColumnName("unitPrice")
                        .HasComment("單價");

                    b.HasKey("ContractFurnitureItemId");

                    b.HasIndex("ContractId");

                    b.ToTable("contractFurnitureItems", null, t =>
                        {
                            t.HasComment("合約內容家具表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.ContractSignature", b =>
                {
                    b.Property<int>("IdcontractSignatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idcontractSignatureId")
                        .HasComment("電子簽名ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdcontractSignatureId"));

                    b.Property<int>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("contractId")
                        .HasComment("合約ID");

                    b.Property<string>("SignMethod")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("signMethod")
                        .HasComment("簽名方式");

                    b.Property<string>("SignVerifyInfo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("signVerifyInfo")
                        .HasComment("簽署驗證資訊");

                    b.Property<string>("SignatureFileUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("signatureFileUrl")
                        .HasComment("簽名檔URL");

                    b.Property<DateTime?>("SignedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("signedAt")
                        .HasComment("時間戳");

                    b.Property<int>("SignerId")
                        .HasColumnType("int")
                        .HasColumnName("signerId")
                        .HasComment("簽約人ID");

                    b.Property<string>("SignerRole")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("signerRole")
                        .HasComment("簽署人身份");

                    b.Property<int?>("UploadId")
                        .HasColumnType("int")
                        .HasColumnName("uploadId");

                    b.HasKey("IdcontractSignatureId");

                    b.HasIndex("ContractId");

                    b.HasIndex("SignerId");

                    b.ToTable("contractSignatures", null, t =>
                        {
                            t.HasComment("電子簽名儲存表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.ContractTemplate", b =>
                {
                    b.Property<int>("ContractTemplateId")
                        .HasColumnType("int")
                        .HasColumnName("contractTemplateId")
                        .HasComment("範本ID");

                    b.Property<string>("TemplateContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("templateContent")
                        .HasComment("範本內容");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("templateName")
                        .HasComment("範本名稱");

                    b.Property<DateTime>("UploadedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("uploadedAt")
                        .HasComment("範本上傳時間");

                    b.HasKey("ContractTemplateId");

                    b.ToTable("contractTemplates", null, t =>
                        {
                            t.HasComment("合約範本表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.CustomerServiceTicket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ticketId")
                        .HasComment("客服單ID (自動遞增，從201開始)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("categoryCode")
                        .HasComment("主分類代碼");

                    b.Property<int?>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("contractId")
                        .HasComment("租約ID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<string>("FurnitureOrderId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("furnitureOrderId")
                        .HasComment("家具訂單ID");

                    b.Property<int?>("HandledBy")
                        .HasColumnType("int")
                        .HasColumnName("handledBy")
                        .HasComment("客服人員ID");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit")
                        .HasColumnName("isResolved")
                        .HasComment("是否結案");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("memberId")
                        .HasComment("使用者ID");

                    b.Property<int?>("PropertyId")
                        .HasColumnType("int")
                        .HasColumnName("propertyId")
                        .HasComment("房源ID");

                    b.Property<DateTime?>("ReplyAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("replyAt")
                        .HasComment("最後回覆時間");

                    b.Property<string>("ReplyContent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("replyContent")
                        .HasComment("客服最後回覆");

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("statusCode")
                        .HasComment("狀態代碼");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("subject")
                        .HasComment("主旨");

                    b.Property<string>("TicketContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticketContent")
                        .HasComment("需求內容");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("TicketId");

                    b.HasIndex("FurnitureOrderId");

                    b.HasIndex(new[] { "CategoryCode" }, "IX_customerServiceTickets_categoryCode");

                    b.HasIndex(new[] { "ContractId" }, "IX_customerServiceTickets_contractId");

                    b.HasIndex(new[] { "CreatedAt" }, "IX_customerServiceTickets_createdAt");

                    b.HasIndex(new[] { "IsResolved" }, "IX_customerServiceTickets_isResolved");

                    b.HasIndex(new[] { "MemberId" }, "IX_customerServiceTickets_memberId");

                    b.HasIndex(new[] { "PropertyId" }, "IX_customerServiceTickets_propertyId");

                    b.HasIndex(new[] { "StatusCode" }, "IX_customerServiceTickets_statusCode");

                    b.ToTable("customerServiceTickets", null, t =>
                        {
                            t.HasComment("客服聯繫表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.DeliveryFeePlan", b =>
                {
                    b.Property<int>("PlanId")
                        .HasColumnType("int")
                        .HasColumnName("planId")
                        .HasComment("配送方案ID");

                    b.Property<decimal>("BaseFee")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("baseFee")
                        .HasComment("基本費用");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("currencyCode")
                        .HasComment("幣別");

                    b.Property<DateTime?>("EndAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("endAt")
                        .HasComment("結束時間");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否啟用");

                    b.Property<decimal?>("MaxWeightKg")
                        .HasColumnType("decimal(6, 2)")
                        .HasColumnName("maxWeightKG")
                        .HasComment("重量上限KG");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("planName")
                        .HasComment("方案名稱");

                    b.Property<decimal>("RemoteAreaSurcharge")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("remoteAreaSurcharge")
                        .HasComment("偏遠加收");

                    b.Property<DateTime>("StartAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("startAt")
                        .HasComment("生效時間");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("PlanId");

                    b.ToTable("deliveryFeePlans", null, t =>
                        {
                            t.HasComment("家具配送費方案表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.District", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("districtId")
                        .HasComment("鄉鎮區ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistrictId"));

                    b.Property<string>("CityCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cityCode")
                        .HasComment("縣市代碼");

                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("cityId")
                        .HasComment("縣市ID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("displayOrder")
                        .HasComment("排序");

                    b.Property<string>("DistrictCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("districtCode")
                        .HasComment("區代碼");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("districtName")
                        .HasComment("區名稱");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否啟用");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("zipCode")
                        .HasComment("郵遞區號");

                    b.HasKey("DistrictId");

                    b.HasIndex(new[] { "CityId", "DistrictCode" }, "UQ_districts_city_districtCode")
                        .IsUnique();

                    b.ToTable("districts", null, t =>
                        {
                            t.HasComment("鄉鎮區代碼表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.Favorite", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("memberID")
                        .HasComment("會員ID");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int")
                        .HasColumnName("propertyID")
                        .HasComment("房源ID");

                    b.Property<DateTime>("FavoritedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("favoritedAt")
                        .HasComment("收藏時間");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否有效");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("MemberId", "PropertyId");

                    b.HasIndex(new[] { "PropertyId" }, "IX_favorites_property");

                    b.ToTable("favorites", null, t =>
                        {
                            t.HasComment("收藏表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.FileApproval", b =>
                {
                    b.Property<int>("ApprovalId")
                        .HasColumnType("int")
                        .HasColumnName("approvalID")
                        .HasComment("審核ID");

                    b.Property<DateTime>("AppliedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("appliedAt")
                        .HasComment("申請時間");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("memberID")
                        .HasComment("會員ID");

                    b.Property<string>("ResultDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("resultDescription")
                        .HasComment("審核說明");

                    b.Property<DateTime?>("ReviewedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("reviewedAt")
                        .HasComment("審核時間");

                    b.Property<int?>("ReviewerAdminId")
                        .HasColumnType("int")
                        .HasColumnName("reviewerAdminID")
                        .HasComment("審核人員ID");

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("statusCode")
                        .HasComment("審核狀態代碼");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.Property<int>("UploadId")
                        .HasColumnType("int")
                        .HasColumnName("uploadID")
                        .HasComment("上傳ID");

                    b.HasKey("ApprovalId");

                    b.HasIndex("UploadId");

                    b.ToTable("fileApprovals", null, t =>
                        {
                            t.HasComment("檔案審核");
                        });
                });

            modelBuilder.Entity("zuHause.Models.FurnitureCart", b =>
                {
                    b.Property<string>("FurnitureCartId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("furnitureCartId")
                        .HasComment("購物車ID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deletedAt")
                        .HasComment("刪除時間");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("memberId")
                        .HasComment("會員ID");

                    b.Property<int?>("PropertyId")
                        .HasColumnType("int")
                        .HasColumnName("propertyId")
                        .HasComment("房源ID");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status")
                        .HasComment("狀態");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("FurnitureCartId");

                    b.HasIndex("MemberId");

                    b.HasIndex("PropertyId");

                    b.ToTable("furnitureCarts", null, t =>
                        {
                            t.HasComment("家具購物車表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.FurnitureCartItem", b =>
                {
                    b.Property<string>("CartItemId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cartItemId")
                        .HasComment("明細ID");

                    b.Property<string>("CartId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cartId")
                        .HasComment("購物車ID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("productId")
                        .HasComment("商品ID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity")
                        .HasComment("數量");

                    b.Property<int>("RentalDays")
                        .HasColumnType("int")
                        .HasColumnName("rentalDays")
                        .HasComment("租期(天)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(12, 0)")
                        .HasColumnName("subTotal")
                        .HasComment("小計");

                    b.Property<decimal>("UnitPriceSnapshot")
                        .HasColumnType("decimal(10, 0)")
                        .HasColumnName("unitPriceSnapshot")
                        .HasComment("單價快照");

                    b.HasKey("CartItemId");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("furnitureCartItems", null, t =>
                        {
                            t.HasComment("家具購物車明細表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.FurnitureCategory", b =>
                {
                    b.Property<string>("FurnitureCategoriesId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("furnitureCategoriesId")
                        .HasComment("分類ID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<byte>("Depth")
                        .HasColumnType("tinyint")
                        .HasColumnName("depth")
                        .HasComment("階層層級");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("displayOrder")
                        .HasComment("顯示排序");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name")
                        .HasComment("分類名稱");

                    b.Property<string>("ParentId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("parentId")
                        .HasComment("上層分類ID");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("FurnitureCategoriesId");

                    b.HasIndex("ParentId");

                    b.ToTable("furnitureCategories", null, t =>
                        {
                            t.HasComment("家具商品分類表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.FurnitureInventory", b =>
                {
                    b.Property<string>("FurnitureInventoryId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("furnitureInventoryId")
                        .HasComment("庫存ID");

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int")
                        .HasColumnName("availableQuantity")
                        .HasComment("可用庫存");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("productId")
                        .HasComment("商品ID");

                    b.Property<int>("RentedQuantity")
                        .HasColumnType("int")
                        .HasColumnName("rentedQuantity")
                        .HasComment("已出租數量");

                    b.Property<int>("SafetyStock")
                        .HasColumnType("int")
                        .HasColumnName("safetyStock")
                        .HasComment("安全庫存");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int")
                        .HasColumnName("totalQuantity")
                        .HasComment("總庫存數量");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("最後更新時間");

                    b.HasKey("FurnitureInventoryId");

                    b.HasIndex(new[] { "ProductId", "AvailableQuantity" }, "IX_furnInventory_available");

                    b.ToTable("furnitureInventory", null, t =>
                        {
                            t.HasComment("家具庫存表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.FurnitureOrder", b =>
                {
                    b.Property<string>("FurnitureOrderId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("furnitureOrderId")
                        .HasComment("訂單ID");

                    b.Property<string>("ContractLink")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("contractLink")
                        .HasComment("合約連結");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("成立時間");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deletedAt")
                        .HasComment("刪除時間");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("memberId")
                        .HasComment("會員ID");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("paymentStatus")
                        .HasComment("付款狀態");

                    b.Property<int?>("PropertyId")
                        .HasColumnType("int")
                        .HasColumnName("propertyId")
                        .HasComment("房源ID");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status")
                        .HasComment("訂單狀態");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(12, 0)")
                        .HasColumnName("totalAmount")
                        .HasComment("總金額");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("FurnitureOrderId");

                    b.HasIndex("PropertyId");

                    b.HasIndex(new[] { "MemberId", "Status" }, "IX_furnOrders_member_status");

                    b.ToTable("furnitureOrders", null, t =>
                        {
                            t.HasComment("家具訂單查詢表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.FurnitureOrderHistory", b =>
                {
                    b.Property<string>("FurnitureOrderHistoryId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("furnitureOrderHistoryId")
                        .HasComment("流水號");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<decimal>("DailyRentalSnapshot")
                        .HasColumnType("decimal(10, 0)")
                        .HasColumnName("dailyRentalSnapshot")
                        .HasComment("單日租金快照");

                    b.Property<string>("DamageNote")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("damageNote")
                        .HasComment("損壞說明");

                    b.Property<string>("DescriptionSnapshot")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descriptionSnapshot")
                        .HasComment("商品描述快照");

                    b.Property<string>("ItemStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("itemStatus")
                        .HasComment("明細狀態");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("orderId")
                        .HasComment("訂單ID");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("productId")
                        .HasComment("商品ID");

                    b.Property<string>("ProductNameSnapshot")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("productNameSnapshot")
                        .HasComment("商品名稱快照");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity")
                        .HasComment("數量");

                    b.Property<DateOnly>("RentalEnd")
                        .HasColumnType("date")
                        .HasColumnName("rentalEnd")
                        .HasComment("租借結束日");

                    b.Property<DateOnly>("RentalStart")
                        .HasColumnType("date")
                        .HasColumnName("rentalStart")
                        .HasComment("租借開始日");

                    b.Property<DateOnly?>("ReturnedAt")
                        .HasColumnType("date")
                        .HasColumnName("returnedAt")
                        .HasComment("實際歸還日期");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(12, 0)")
                        .HasColumnName("subTotal")
                        .HasComment("小計");

                    b.HasKey("FurnitureOrderHistoryId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("furnitureOrderHistory", null, t =>
                        {
                            t.HasComment("家具歷史訂單清單");
                        });
                });

            modelBuilder.Entity("zuHause.Models.FurnitureOrderItem", b =>
                {
                    b.Property<string>("FurnitureOrderItemId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("furnitureOrderItemId")
                        .HasComment("明細ID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<decimal>("DailyRentalSnapshot")
                        .HasColumnType("decimal(10, 0)")
                        .HasColumnName("dailyRentalSnapshot")
                        .HasComment("單日租金快照");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("orderId")
                        .HasComment("訂單ID");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("productId")
                        .HasComment("商品ID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity")
                        .HasComment("數量");

                    b.Property<int>("RentalDays")
                        .HasColumnType("int")
                        .HasColumnName("rentalDays")
                        .HasComment("租期(天)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(12, 0)")
                        .HasColumnName("subTotal")
                        .HasComment("小計");

                    b.HasKey("FurnitureOrderItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("furnitureOrderItems", null, t =>
                        {
                            t.HasComment("家具訂單查詢明細表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.FurnitureProduct", b =>
                {
                    b.Property<string>("FurnitureProductId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("furnitureProductId")
                        .HasComment("商品ID");

                    b.Property<string>("CategoryId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("categoryId")
                        .HasComment("分類ID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<decimal>("DailyRental")
                        .HasColumnType("decimal(10, 0)")
                        .HasColumnName("dailyRental")
                        .HasComment("每日租金");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deletedAt")
                        .HasComment("刪除時間");

                    b.Property<DateOnly?>("DelistedAt")
                        .HasColumnType("date")
                        .HasColumnName("delistedAt")
                        .HasComment("下架時間");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description")
                        .HasComment("商品描述");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("imageUrl")
                        .HasComment("商品圖片URL");

                    b.Property<decimal>("ListPrice")
                        .HasColumnType("decimal(10, 0)")
                        .HasColumnName("listPrice")
                        .HasComment("原價");

                    b.Property<DateOnly?>("ListedAt")
                        .HasColumnType("date")
                        .HasColumnName("listedAt")
                        .HasComment("上架時間");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("productName")
                        .HasComment("商品名稱");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("status")
                        .HasComment("上下架狀態");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("FurnitureProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex(new[] { "Status", "CategoryId" }, "IX_furnProducts_status_cat");

                    b.ToTable("furnitureProducts", null, t =>
                        {
                            t.HasComment("家具商品資料表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.FurnitureRentalContract", b =>
                {
                    b.Property<string>("FurnitureRentalContractsId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("furnitureRentalContractsId")
                        .HasComment("合約ID");

                    b.Property<string>("ContractJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contractJson")
                        .HasComment("合約 JSON");

                    b.Property<string>("ContractLink")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("contractLink")
                        .HasComment("簽章連結");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("簽約日期");

                    b.Property<DateOnly?>("DeliveryDate")
                        .HasColumnType("date")
                        .HasColumnName("deliveryDate")
                        .HasComment("配送日期");

                    b.Property<string>("ESignatureValue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("eSignatureValue")
                        .HasComment("電子簽章值");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("orderId")
                        .HasComment("訂單ID");

                    b.Property<string>("SignStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("signStatus")
                        .HasComment("簽署狀態");

                    b.Property<DateTime?>("SignedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("signedAt")
                        .HasComment("簽署完成時間");

                    b.Property<string>("TerminationPolicy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("terminationPolicy")
                        .HasComment("退租政策");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("FurnitureRentalContractsId");

                    b.HasIndex("OrderId");

                    b.ToTable("furnitureRentalContracts", null, t =>
                        {
                            t.HasComment("家具租賃合約表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.Image", b =>
                {
                    b.Property<long>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("imageId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ImageId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("category");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("displayOrder");

                    b.Property<int>("EntityId")
                        .HasColumnType("int")
                        .HasColumnName("entityId");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("entityType");

                    b.Property<long>("FileSizeBytes")
                        .HasColumnType("bigint")
                        .HasColumnName("fileSizeBytes");

                    b.Property<int>("Height")
                        .HasColumnType("int")
                        .HasColumnName("height");

                    b.Property<Guid>("ImageGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("imageGuid")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mimeType");

                    b.Property<string>("OriginalFileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("originalFileName");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("rowVersion");

                    b.Property<string>("StoredFileName")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(41)
                        .IsUnicode(false)
                        .HasColumnType("varchar(41)")
                        .HasColumnName("storedFileName")
                        .HasComputedColumnSql("lower(CONVERT([char](36),[imageGuid]))+case [mimeType] when 'image/webp' then '.webp' when 'image/jpeg' then '.jpg' when 'image/png' then '.png' else '.bin' end", true);

                    b.Property<DateTime>("UploadedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("uploadedAt")
                        .HasDefaultValueSql("sysutcdatetime()");

                    b.Property<int?>("UploadedByMemberId")
                        .HasColumnType("int")
                        .HasColumnName("uploadedByMemberId");

                    b.Property<int>("Width")
                        .HasColumnType("int")
                        .HasColumnName("width");

                    b.HasKey("ImageId")
                        .HasName("PK__Images__7516F70C0063CFAC");

                    b.HasIndex("ImageGuid")
                        .IsUnique()
                        .HasDatabaseName("uq_images_imageGuid");

                    b.HasIndex("UploadedByMemberId");

                    b.HasIndex("EntityType", "EntityId", "Category", "DisplayOrder", "IsActive")
                        .HasDatabaseName("ix_images_entity");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("EntityType", "EntityId", "Category", "DisplayOrder", "IsActive"), new[] { "ImageGuid", "StoredFileName", "FileSizeBytes", "Width", "Height", "UploadedAt", "MimeType", "OriginalFileName" });

                    b.HasIndex(new[] { "EntityType", "EntityId", "Category", "DisplayOrder", "IsActive" }, "IX_Images_EntityType_EntityId_Covering");

                    b.HasIndex(new[] { "EntityType", "EntityId", "Category", "DisplayOrder" }, "IX_Images_UQ_DisplayOrder")
                        .IsUnique()
                        .HasFilter("([DisplayOrder] IS NOT NULL)");

                    b.HasIndex(new[] { "ImageGuid" }, "UQ_Images_ImageGuid")
                        .IsUnique();

                    b.ToTable("images", null, t =>
                        {
                            t.HasComment("圖片表");

                            t.HasCheckConstraint("ck_images_category", "[category] IN ('BedRoom','Kitchen','Living','Balcony','Avatar','Gallery','Product')");

                            t.HasCheckConstraint("ck_images_entityType", "[entityType] IN ('Member','Property','Furniture','Announcement')");
                        });
                });

            modelBuilder.Entity("zuHause.Models.InventoryEvent", b =>
                {
                    b.Property<Guid>("FurnitureInventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("furnitureInventoryId")
                        .HasDefaultValueSql("(newid())")
                        .HasComment("事件ID");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("eventType")
                        .HasComment("事件類型");

                    b.Property<DateTime>("OccurredAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("occurredAt")
                        .HasComment("發生時間");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("productId")
                        .HasComment("商品ID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity")
                        .HasComment("異動數量");

                    b.Property<DateTime>("RecordedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("recordedAt")
                        .HasComment("寫入時間");

                    b.Property<string>("SourceId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("sourceId")
                        .HasComment("來源編號");

                    b.Property<string>("SourceType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("sourceType")
                        .HasComment("來源類型");

                    b.HasKey("FurnitureInventoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("inventoryEvents", null, t =>
                        {
                            t.HasComment("庫存事件表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.ListingPlan", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("planId")
                        .HasComment("刊登費方案ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("currencyCode")
                        .HasComment("幣別");

                    b.Property<DateTime?>("EndAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("endAt")
                        .HasComment("結束時間");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否啟用");

                    b.Property<int>("MinListingDays")
                        .HasColumnType("int")
                        .HasColumnName("minListingDays")
                        .HasComment("最小上架天數");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("planName")
                        .HasComment("方案名稱");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("pricePerDay")
                        .HasComment("每日刊登費");

                    b.Property<DateTime>("StartAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("startAt")
                        .HasComment("生效時間");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("PlanId");

                    b.ToTable("listingPlans", null, t =>
                        {
                            t.HasComment("刊登費方案表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("memberID")
                        .HasDefaultValueSql("(NEXT VALUE FOR [dbo].[seq_memberID])")
                        .HasComment("會員ID");

                    b.Property<string>("AddressLine")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("addressLine")
                        .HasComment("詳細地址");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birthDate")
                        .HasComment("生日");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)")
                        .HasColumnName("email")
                        .HasComment("電子信箱");

                    b.Property<DateTime?>("EmailVerifiedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("emailVerifiedAt")
                        .HasComment("Email驗證通過時間");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint")
                        .HasColumnName("gender")
                        .HasComment("性別");

                    b.Property<DateTime?>("IdentityVerifiedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("identityVerifiedAt")
                        .HasComment("身份驗證通過時間");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否啟用");

                    b.Property<bool>("IsLandlord")
                        .HasColumnType("bit")
                        .HasColumnName("isLandlord")
                        .HasComment("是否為房東");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("lastLoginAt")
                        .HasComment("最後登入時間");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("memberName")
                        .HasComment("會員姓名");

                    b.Property<int?>("MemberTypeId")
                        .HasColumnType("int")
                        .HasColumnName("memberTypeID")
                        .HasComment("會員身份別ID");

                    b.Property<string>("NationalIdNo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("nationalIdNo")
                        .IsFixedLength()
                        .HasComment("身分證號");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password")
                        .HasComment("密碼雜湊");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phoneNumber")
                        .HasComment("手機號碼");

                    b.Property<DateTime?>("PhoneVerifiedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("phoneVerifiedAt")
                        .HasComment("手機驗證通過時間");

                    b.Property<int?>("PrimaryRentalCityId")
                        .HasColumnType("int")
                        .HasColumnName("primaryRentalCityID")
                        .HasComment("主要承租縣市ID");

                    b.Property<int?>("PrimaryRentalDistrictId")
                        .HasColumnType("int")
                        .HasColumnName("primaryRentalDistrictID")
                        .HasComment("主要承租區域ID");

                    b.Property<int?>("ResidenceCityId")
                        .HasColumnType("int")
                        .HasColumnName("residenceCityID")
                        .HasComment("居住縣市ID");

                    b.Property<int?>("ResidenceDistrictId")
                        .HasColumnType("int")
                        .HasColumnName("residenceDistrictID")
                        .HasComment("居住區域ID");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("MemberId");

                    b.HasIndex("MemberTypeId");

                    b.HasIndex("PrimaryRentalCityId");

                    b.HasIndex("PrimaryRentalDistrictId");

                    b.HasIndex("ResidenceCityId");

                    b.HasIndex("ResidenceDistrictId");

                    b.HasIndex(new[] { "Email" }, "IX_members_email");

                    b.HasIndex(new[] { "PhoneNumber" }, "IX_members_phone");

                    b.ToTable("members", null, t =>
                        {
                            t.HasComment("會員資料表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.MemberType", b =>
                {
                    b.Property<int>("MemberTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("memberTypeID")
                        .HasComment("身份ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberTypeId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("description")
                        .HasComment("描述");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否啟用");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("typeName")
                        .HasComment("身分名稱");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("MemberTypeId");

                    b.ToTable("memberTypes", null, t =>
                        {
                            t.HasComment("會員身分表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.MemberVerification", b =>
                {
                    b.Property<int>("VerificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("verificationID")
                        .HasComment("驗證ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VerificationId"));

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("bit")
                        .HasColumnName("isSuccessful")
                        .HasComment("是否驗證成功");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("memberID")
                        .HasComment("會員ID");

                    b.Property<DateTime>("SentAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("sentAt")
                        .HasComment("發送時間");

                    b.Property<string>("VerificationCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("verificationCode")
                        .HasComment("驗證碼");

                    b.Property<string>("VerificationTypeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("verificationTypeCode")
                        .HasComment("驗證類型代碼");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("verifiedAt")
                        .HasComment("驗證完成時間");

                    b.HasKey("VerificationId");

                    b.HasIndex("MemberId");

                    b.ToTable("memberVerifications", null, t =>
                        {
                            t.HasComment("通訊相關驗證表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.MessagePlacement", b =>
                {
                    b.Property<string>("PageCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pageCode")
                        .HasComment("頁面識別碼");

                    b.Property<string>("SectionCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("sectionCode")
                        .HasComment("區段代碼");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("displayOrder")
                        .HasComment("顯示順序");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否啟用");

                    b.Property<int>("MessageId")
                        .HasColumnType("int")
                        .HasColumnName("messageID")
                        .HasComment("訊息ID");

                    b.Property<string>("Subtitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("subtitle")
                        .HasComment("小標題");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("PageCode", "SectionCode");

                    b.HasIndex("MessageId");

                    b.ToTable("messagePlacements", null, t =>
                        {
                            t.HasComment("訊息位置");
                        });
                });

            modelBuilder.Entity("zuHause.Models.OrderEvent", b =>
                {
                    b.Property<Guid>("OrderEventsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("orderEventsId")
                        .HasDefaultValueSql("(newid())")
                        .HasComment("事件ID");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("eventType")
                        .HasComment("事件類型");

                    b.Property<DateTime>("OccurredAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("occurredAt")
                        .HasComment("發生時間");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("orderId")
                        .HasComment("訂單ID");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("payload")
                        .HasComment("事件內容");

                    b.Property<DateTime>("RecordedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("recordedAt")
                        .HasComment("寫入時間");

                    b.HasKey("OrderEventsId");

                    b.HasIndex("OrderId");

                    b.ToTable("orderEvents", null, t =>
                        {
                            t.HasComment("訂單事件表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.Page", b =>
                {
                    b.Property<string>("PageCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pageCode")
                        .HasComment("頁面識別碼");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("displayOrder")
                        .HasComment("顯示順序");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否啟用");

                    b.Property<string>("ModuleScope")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("moduleScope")
                        .HasComment("模組");

                    b.Property<string>("PageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("pageName")
                        .HasComment("頁面名稱");

                    b.Property<string>("RoutePath")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("routePath")
                        .HasComment("路徑");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("PageCode");

                    b.ToTable("pages", null, t =>
                        {
                            t.HasComment("共用頁面代碼表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.Property", b =>
                {
                    b.Property<int>("PropertyId")
                        .HasColumnType("int")
                        .HasColumnName("propertyID")
                        .HasComment("房源ID");

                    b.Property<string>("AddressLine")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("addressLine")
                        .HasComment("詳細地址");

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(8, 2)")
                        .HasColumnName("area")
                        .HasComment("坪數");

                    b.Property<int>("BathroomCount")
                        .HasColumnType("int")
                        .HasColumnName("bathroomCount")
                        .HasComment("衛數");

                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("cityID")
                        .HasComment("縣市ID");

                    b.Property<decimal?>("CleaningFeeAmount")
                        .HasColumnType("decimal(8, 2)")
                        .HasColumnName("cleaningFeeAmount")
                        .HasComment("清潔費金額");

                    b.Property<bool>("CleaningFeeRequired")
                        .HasColumnType("bit")
                        .HasColumnName("cleaningFeeRequired")
                        .HasComment("清潔費需額外收費");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<int>("CurrentFloor")
                        .HasColumnType("int")
                        .HasColumnName("currentFloor")
                        .HasComment("所在樓層");

                    b.Property<decimal?>("CustomElectricityFee")
                        .HasColumnType("decimal(8, 2)")
                        .HasColumnName("customElectricityFee")
                        .HasComment("自訂電費");

                    b.Property<decimal?>("CustomWaterFee")
                        .HasColumnType("decimal(8, 2)")
                        .HasColumnName("customWaterFee")
                        .HasComment("自訂水費");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deletedAt")
                        .HasComment("刪除時間");

                    b.Property<decimal>("DepositAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("depositAmount")
                        .HasComment("押金金額");

                    b.Property<int>("DepositMonths")
                        .HasColumnType("int")
                        .HasColumnName("depositMonths")
                        .HasComment("押金月數");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description")
                        .HasComment("詳細描述");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int")
                        .HasColumnName("districtID")
                        .HasComment("區域ID");

                    b.Property<string>("ElectricityFeeType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("electricityFeeType")
                        .HasComment("電費計算方式");

                    b.Property<DateTime?>("ExpireAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("expireAt")
                        .HasComment("上架到期時間");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit")
                        .HasColumnName("isPaid")
                        .HasComment("付款狀態");

                    b.Property<int>("LandlordMemberId")
                        .HasColumnType("int")
                        .HasColumnName("landlordMemberID")
                        .HasComment("房東會員ID");

                    b.Property<int?>("ListingDays")
                        .HasColumnType("int")
                        .HasColumnName("listingDays")
                        .HasComment("刊登天數");

                    b.Property<decimal?>("ListingFeeAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("listingFeeAmount")
                        .HasComment("刊登費用");

                    b.Property<int?>("ListingPlanId")
                        .HasColumnType("int")
                        .HasColumnName("listingPlanID")
                        .HasComment("刊登費方案ID");

                    b.Property<int>("LivingRoomCount")
                        .HasColumnType("int")
                        .HasColumnName("livingRoomCount")
                        .HasComment("廳數");

                    b.Property<decimal?>("ManagementFeeAmount")
                        .HasColumnType("decimal(8, 2)")
                        .HasColumnName("managementFeeAmount")
                        .HasComment("管理費金額");

                    b.Property<bool>("ManagementFeeIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("managementFeeIncluded")
                        .HasComment("管理費含租金");

                    b.Property<int>("MinimumRentalMonths")
                        .HasColumnType("int")
                        .HasColumnName("minimumRentalMonths")
                        .HasComment("最短租期(月)");

                    b.Property<decimal>("MonthlyRent")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("monthlyRent")
                        .HasComment("月租金");

                    b.Property<DateTime?>("PaidAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("paidAt")
                        .HasComment("完成付款時間");

                    b.Property<bool>("ParkingAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("parkingAvailable")
                        .HasComment("有停車位");

                    b.Property<decimal?>("ParkingFeeAmount")
                        .HasColumnType("decimal(8, 2)")
                        .HasColumnName("parkingFeeAmount")
                        .HasComment("停車位費用");

                    b.Property<bool>("ParkingFeeRequired")
                        .HasColumnType("bit")
                        .HasColumnName("parkingFeeRequired")
                        .HasComment("停車費需額外收費");

                    b.Property<string>("PreviewImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("previewImageURL")
                        .HasComment("預覽圖連結");

                    b.Property<string>("PropertyProofUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("propertyProofURL")
                        .HasComment("房產證明文件URL");

                    b.Property<DateTime?>("PublishedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("publishedAt")
                        .HasComment("上架日期");

                    b.Property<int>("RoomCount")
                        .HasColumnType("int")
                        .HasColumnName("roomCount")
                        .HasComment("房數");

                    b.Property<string>("SpecialRules")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("specialRules")
                        .HasComment("特殊守則");

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("statusCode")
                        .HasComment("房源狀態代碼");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("title")
                        .HasComment("房源標題");

                    b.Property<int>("TotalFloors")
                        .HasColumnType("int")
                        .HasColumnName("totalFloors")
                        .HasComment("總樓層");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("最後修改日期");

                    b.Property<string>("WaterFeeType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("waterFeeType")
                        .HasComment("水費計算方式");

                    b.HasKey("PropertyId");

                    b.HasIndex("LandlordMemberId");

                    b.HasIndex("ListingPlanId");

                    b.HasIndex(new[] { "CityId", "DistrictId" }, "IX_properties_location");

                    b.HasIndex(new[] { "StatusCode" }, "IX_properties_status");

                    b.ToTable("properties", null, t =>
                        {
                            t.HasComment("房源資料表");

                            t.HasTrigger("trg_properties_status_protection");

                            t.HasTrigger("trg_properties_validate_landlord");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("zuHause.Models.PropertyComplaint", b =>
                {
                    b.Property<int>("ComplaintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("complaintId")
                        .HasComment("投訴ID (自動遞增，從301開始)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComplaintId"));

                    b.Property<int>("ComplainantId")
                        .HasColumnType("int")
                        .HasColumnName("complainantId")
                        .HasComment("投訴人ID");

                    b.Property<string>("ComplaintContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("complaintContent")
                        .HasComment("投訴內容");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<int?>("HandledBy")
                        .HasColumnType("int")
                        .HasColumnName("handledBy")
                        .HasComment("處理人員ID");

                    b.Property<string>("InternalNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("internalNote")
                        .HasComment("內部註記");

                    b.Property<int>("LandlordId")
                        .HasColumnType("int")
                        .HasColumnName("landlordId")
                        .HasComment("被投訴房東ID");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int")
                        .HasColumnName("propertyId")
                        .HasComment("房源ID");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("resolvedAt")
                        .HasComment("結案時間");

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("statusCode")
                        .HasComment("處理狀態代碼");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("ComplaintId");

                    b.HasIndex(new[] { "ComplainantId" }, "IX_propertyComplaints_complainantId");

                    b.HasIndex(new[] { "CreatedAt" }, "IX_propertyComplaints_createdAt");

                    b.HasIndex(new[] { "HandledBy" }, "IX_propertyComplaints_handledBy");

                    b.HasIndex(new[] { "LandlordId" }, "IX_propertyComplaints_landlordId");

                    b.HasIndex(new[] { "PropertyId" }, "IX_propertyComplaints_propertyId");

                    b.HasIndex(new[] { "ResolvedAt" }, "IX_propertyComplaints_resolvedAt");

                    b.HasIndex(new[] { "StatusCode" }, "IX_propertyComplaints_statusCode");

                    b.ToTable("propertyComplaints", null, t =>
                        {
                            t.HasComment("房源投訴表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.PropertyEquipmentCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("categoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("categoryName")
                        .HasComment("設備名稱");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否啟用");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("parentCategoryID")
                        .HasComment("上層分類ID");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("propertyEquipmentCategories", null, t =>
                        {
                            t.HasComment("房源設備分類資料表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.PropertyEquipmentRelation", b =>
                {
                    b.Property<int>("RelationId")
                        .HasColumnType("int")
                        .HasColumnName("relationID")
                        .HasComment("關聯ID");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryID")
                        .HasComment("設備分類ID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int")
                        .HasColumnName("propertyID")
                        .HasComment("房源ID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity")
                        .HasComment("數量");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("RelationId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PropertyId");

                    b.ToTable("propertyEquipmentRelations", null, t =>
                        {
                            t.HasComment("房源設備關聯資料表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.PropertyImage", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("imageID")
                        .HasComment("圖片ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("displayOrder")
                        .HasComment("顯示順序");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("imagePath")
                        .HasComment("圖片路徑");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int")
                        .HasColumnName("propertyID")
                        .HasComment("房源ID");

                    b.HasKey("ImageId");

                    b.HasIndex(new[] { "PropertyId", "DisplayOrder" }, "UQ_propertyImages_property_order")
                        .IsUnique();

                    b.ToTable("propertyImages", null, t =>
                        {
                            t.HasComment("房源圖片表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.RentalApplication", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("applicationID")
                        .HasComment("申請ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<string>("ApplicationType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("applicationType")
                        .HasComment("申請類型");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("申請時間");

                    b.Property<string>("CurrentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("currentStatus")
                        .HasComment("目前狀態");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deletedAt")
                        .HasComment("刪除時間");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否有效");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("memberID")
                        .HasComment("申請會員ID");

                    b.Property<string>("Message")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("message")
                        .HasComment("申請留言");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int")
                        .HasColumnName("propertyID")
                        .HasComment("房源ID");

                    b.Property<DateOnly?>("RentalEndDate")
                        .HasColumnType("date")
                        .HasColumnName("rentalEndDate")
                        .HasComment("租期結束");

                    b.Property<DateOnly?>("RentalStartDate")
                        .HasColumnType("date")
                        .HasColumnName("rentalStartDate")
                        .HasComment("租期開始");

                    b.Property<DateTime?>("ScheduleTime")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("scheduleTime")
                        .HasComment("預約看房時間");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("ApplicationId");

                    b.HasIndex("MemberId");

                    b.HasIndex("PropertyId");

                    b.ToTable("rentalApplications", null, t =>
                        {
                            t.HasComment("租賃/看房申請資料表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.RenterPost", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("postID")
                        .HasComment("文章ID");

                    b.Property<decimal>("BudgetMax")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("budgetMax")
                        .HasComment("預算上限");

                    b.Property<decimal>("BudgetMin")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("budgetMin")
                        .HasComment("預算下限");

                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("cityID")
                        .HasComment("希望縣市ID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("發布時間");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deletedAt")
                        .HasComment("刪除時間");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int")
                        .HasColumnName("districtID")
                        .HasComment("希望區域ID");

                    b.Property<string>("HouseType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("houseType")
                        .HasComment("房屋類型");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否有效");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("memberID")
                        .HasComment("租客會員ID");

                    b.Property<string>("PostContent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("postContent")
                        .HasComment("詳細需求");

                    b.Property<int>("ReplyCount")
                        .HasColumnType("int")
                        .HasColumnName("replyCount")
                        .HasComment("回覆數");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("最後編輯時間");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int")
                        .HasColumnName("viewCount")
                        .HasComment("瀏覽數");

                    b.HasKey("PostId");

                    b.HasIndex("MemberId");

                    b.HasIndex(new[] { "CityId", "DistrictId", "HouseType" }, "IX_renterPosts_location");

                    b.ToTable("renterPosts", null, t =>
                        {
                            t.HasComment("尋租文章資料表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.RenterPostReply", b =>
                {
                    b.Property<int>("ReplyId")
                        .HasColumnType("int")
                        .HasColumnName("replyID")
                        .HasComment("回覆ID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("回覆時間");

                    b.Property<bool>("IsWithinBudget")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isWithinBudget")
                        .HasComment("符合預算");

                    b.Property<int>("LandlordMemberId")
                        .HasColumnType("int")
                        .HasColumnName("landlordMemberID")
                        .HasComment("房東會員ID");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("postID")
                        .HasComment("文章ID");

                    b.Property<string>("ReplyContent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("replyContent")
                        .HasComment("回覆內容");

                    b.Property<int?>("SuggestPropertyId")
                        .HasColumnType("int")
                        .HasColumnName("suggestPropertyID")
                        .HasComment("推薦房源ID");

                    b.Property<string>("Tags")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tags")
                        .HasComment("符合條件標籤");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("ReplyId");

                    b.HasIndex("LandlordMemberId");

                    b.HasIndex("PostId");

                    b.ToTable("renterPostReplies", null, t =>
                        {
                            t.HasComment("尋租文章回覆資料表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.RenterRequirementList", b =>
                {
                    b.Property<int>("RequirementId")
                        .HasColumnType("int")
                        .HasColumnName("requirementID")
                        .HasComment("條件ID");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否啟用");

                    b.Property<string>("RequirementName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("requirementName")
                        .HasComment("條件名稱");

                    b.HasKey("RequirementId");

                    b.ToTable("renterRequirementList", null, t =>
                        {
                            t.HasComment("尋租文章需求條件清單");
                        });
                });

            modelBuilder.Entity("zuHause.Models.RenterRequirementRelation", b =>
                {
                    b.Property<int>("RelationId")
                        .HasColumnType("int")
                        .HasColumnName("relationID")
                        .HasComment("關聯ID");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("postID")
                        .HasComment("文章ID");

                    b.Property<int>("RequirementId")
                        .HasColumnType("int")
                        .HasColumnName("requirementID")
                        .HasComment("條件ID");

                    b.HasKey("RelationId");

                    b.HasIndex("RequirementId");

                    b.HasIndex(new[] { "PostId", "RequirementId" }, "UQ_rentReqRel_post_req")
                        .IsUnique();

                    b.ToTable("renterRequirementRelations", null, t =>
                        {
                            t.HasComment("尋租條件關聯");
                        });
                });

            modelBuilder.Entity("zuHause.Models.SearchHistory", b =>
                {
                    b.Property<long>("HistoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("historyID")
                        .HasComment("歷史ID");

                    b.Property<string>("DeviceType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("deviceType")
                        .HasComment("裝置");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("ipAddress")
                        .HasComment("IP");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("keyword")
                        .HasComment("搜尋關鍵字");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("memberID")
                        .HasComment("會員ID");

                    b.Property<int?>("ResultCount")
                        .HasColumnType("int")
                        .HasColumnName("resultCount")
                        .HasComment("結果筆數");

                    b.Property<DateTime>("SearchedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("searchedAt")
                        .HasComment("搜尋時間");

                    b.HasKey("HistoryId");

                    b.HasIndex(new[] { "MemberId", "SearchedAt" }, "IX_searchHistory_member_time");

                    b.ToTable("searchHistory", null, t =>
                        {
                            t.HasComment("搜索歷史表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.SiteMessage", b =>
                {
                    b.Property<int>("SiteMessagesId")
                        .HasColumnType("int")
                        .HasColumnName("siteMessagesId")
                        .HasComment("訊息ID");

                    b.Property<string>("AttachmentUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("attachmentUrl")
                        .HasComment("圖片/附件URL");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("category")
                        .HasComment("分類");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deletedAt")
                        .HasComment("刪除時間");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("displayOrder")
                        .HasComment("顯示順序");

                    b.Property<DateTime?>("EndAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("endAt")
                        .HasComment("結束時間");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否啟用");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("messageType")
                        .HasComment("訊息類型");

                    b.Property<string>("ModuleScope")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("moduleScope")
                        .HasComment("模組");

                    b.Property<string>("SiteMessageContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("siteMessageContent")
                        .HasComment("內文");

                    b.Property<DateTime?>("StartAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("startAt")
                        .HasComment("開始時間");

                    b.Property<string>("Title")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("title")
                        .HasComment("標題");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("SiteMessagesId");

                    b.ToTable("siteMessages", null, t =>
                        {
                            t.HasComment("網站訊息表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.SystemCode", b =>
                {
                    b.Property<string>("CodeCategory")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("codeCategory")
                        .HasComment("代碼類別");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("code")
                        .HasComment("代碼");

                    b.Property<string>("CodeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codeName")
                        .HasComment("代碼名稱");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("displayOrder")
                        .HasComment("排序");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否啟用");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("CodeCategory", "Code");

                    b.ToTable("systemCodes", null, t =>
                        {
                            t.HasComment("代碼總表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.SystemCodeCategory", b =>
                {
                    b.Property<string>("CodeCategory")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("codeCategory")
                        .HasComment("代碼類別");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("categoryName")
                        .HasComment("類別名稱");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("description")
                        .HasComment("描述");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否啟用");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("CodeCategory");

                    b.ToTable("systemCodeCategories", null, t =>
                        {
                            t.HasComment("代碼類別表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.SystemMessage", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("messageID")
                        .HasComment("系統訊息ID (自動遞增，從401開始)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("adminID")
                        .HasComment("發送管理員ID");

                    b.Property<string>("AttachmentUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("attachmentUrl")
                        .HasComment("附件URL");

                    b.Property<string>("AudienceTypeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("audienceTypeCode")
                        .HasComment("接受者類型代碼");

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("categoryCode")
                        .HasComment("訊息類別代碼");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deletedAt")
                        .HasComment("刪除時間");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否啟用");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("messageContent")
                        .HasComment("發送內容");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("receiverID")
                        .HasComment("個別接受者ID");

                    b.Property<DateTime>("SentAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("sentAt")
                        .HasComment("發送時間");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("title")
                        .HasComment("發送標題");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("MessageId");

                    b.HasIndex(new[] { "IsActive", "CategoryCode" }, "IX_systemMessages_active_category");

                    SqlServerIndexBuilderExtensions.HasFillFactor(b.HasIndex(new[] { "IsActive", "CategoryCode" }, "IX_systemMessages_active_category"), 100);

                    b.HasIndex(new[] { "AdminId" }, "IX_systemMessages_adminID");

                    b.HasIndex(new[] { "AudienceTypeCode" }, "IX_systemMessages_audienceTypeCode");

                    b.HasIndex(new[] { "DeletedAt" }, "IX_systemMessages_deletedAt");

                    b.HasIndex(new[] { "ReceiverId" }, "IX_systemMessages_receiverID");

                    b.HasIndex(new[] { "SentAt" }, "IX_systemMessages_sentAt");

                    b.ToTable("systemMessages", null, t =>
                        {
                            t.HasComment("系統訊息表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.UserNotification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notificationID")
                        .HasComment("通知ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deletedAt")
                        .HasComment("刪除時間");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit")
                        .HasColumnName("isRead")
                        .HasComment("是否已讀");

                    b.Property<string>("LinkUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("linkUrl")
                        .HasComment("相關連結URL");

                    b.Property<string>("ModuleCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("moduleCode")
                        .HasComment("來源模組代碼");

                    b.Property<string>("NotificationContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notificationContent")
                        .HasComment("訊息內容");

                    b.Property<DateTime?>("ReadAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("readAt")
                        .HasComment("閱讀時間");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("receiverID")
                        .HasComment("接收者ID");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("senderID")
                        .HasComment("發送者ID");

                    b.Property<DateTime>("SentAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("sentAt")
                        .HasComment("發送時間");

                    b.Property<int?>("SourceEntityId")
                        .HasColumnType("int")
                        .HasColumnName("sourceEntityID")
                        .HasComment("來源資料ID");

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("statusCode")
                        .HasComment("狀態代碼");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("title")
                        .HasComment("訊息標題");

                    b.Property<string>("TypeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("typeCode")
                        .HasComment("通知類型代碼");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.HasKey("NotificationId");

                    b.HasIndex(new[] { "ReceiverId", "IsRead" }, "IX_userNotifications_receiver_isRead");

                    b.ToTable("userNotifications", null, t =>
                        {
                            t.HasComment("使用者通知資料表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.UserUpload", b =>
                {
                    b.Property<int>("UploadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uploadID")
                        .HasComment("上傳ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UploadId"));

                    b.Property<int?>("ApprovalId")
                        .HasColumnType("int")
                        .HasColumnName("approvalID")
                        .HasComment("審核ID");

                    b.Property<string>("Checksum")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("checksum")
                        .HasComment("檔案雜湊");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("建立時間");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deletedAt")
                        .HasComment("刪除時間");

                    b.Property<string>("FileExt")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("fileExt")
                        .HasComment("副檔名");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("filePath")
                        .HasComment("檔案路徑");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint")
                        .HasColumnName("fileSize")
                        .HasComment("檔案大小(Byte)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive")
                        .HasComment("是否有效");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("memberID")
                        .HasComment("會員ID");

                    b.Property<string>("MimeType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("mimeType")
                        .HasComment("MIME 類型");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("moduleCode")
                        .HasComment("來源模組代碼");

                    b.Property<string>("OriginalFileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("originalFileName")
                        .HasComment("原始檔名");

                    b.Property<int?>("SourceEntityId")
                        .HasColumnType("int")
                        .HasColumnName("sourceEntityID")
                        .HasComment("來源資料ID");

                    b.Property<string>("StoredFileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("storedFileName")
                        .HasComment("實體檔名");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(CONVERT([datetime2](0),sysdatetime()))")
                        .HasComment("更新時間");

                    b.Property<string>("UploadTypeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("uploadTypeCode")
                        .HasComment("上傳種類代碼");

                    b.Property<DateTime>("UploadedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("uploadedAt")
                        .HasComment("上傳時間");

                    b.HasKey("UploadId");

                    b.HasIndex("MemberId");

                    b.ToTable("userUploads", null, t =>
                        {
                            t.HasComment("會員上傳資料紀錄表");
                        });
                });

            modelBuilder.Entity("zuHause.Models.Admin", b =>
                {
                    b.HasOne("zuHause.Models.AdminRole", "RoleCodeNavigation")
                        .WithMany("Admins")
                        .HasForeignKey("RoleCode")
                        .IsRequired()
                        .HasConstraintName("FK_admins_role");

                    b.Navigation("RoleCodeNavigation");
                });

            modelBuilder.Entity("zuHause.Models.ApplicationStatusLog", b =>
                {
                    b.HasOne("zuHause.Models.RentalApplication", "Application")
                        .WithMany("ApplicationStatusLogs")
                        .HasForeignKey("ApplicationId")
                        .IsRequired()
                        .HasConstraintName("FK_appStatusLogs_application");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("zuHause.Models.Approval", b =>
                {
                    b.HasOne("zuHause.Models.Member", "ApplicantMember")
                        .WithMany("Approvals")
                        .HasForeignKey("ApplicantMemberId")
                        .IsRequired()
                        .HasConstraintName("FK_approvals_applicant");

                    b.HasOne("zuHause.Models.Property", "SourceProperty")
                        .WithMany("Approvals")
                        .HasForeignKey("SourcePropertyId")
                        .HasConstraintName("FK_approvals_Property");

                    b.HasOne("zuHause.Models.SystemCode", "SystemCode")
                        .WithMany("Approvals")
                        .HasForeignKey("StatusCategory", "StatusCode")
                        .HasConstraintName("FK_approvals_status");

                    b.Navigation("ApplicantMember");

                    b.Navigation("SourceProperty");

                    b.Navigation("SystemCode");
                });

            modelBuilder.Entity("zuHause.Models.ApprovalItem", b =>
                {
                    b.HasOne("zuHause.Models.Approval", "Approval")
                        .WithMany("ApprovalItems")
                        .HasForeignKey("ApprovalId")
                        .IsRequired()
                        .HasConstraintName("FK_approvalItems_approval");

                    b.HasOne("zuHause.Models.SystemCode", "SystemCode")
                        .WithMany("ApprovalItems")
                        .HasForeignKey("ActionCategory", "ActionType")
                        .HasConstraintName("FK_approvalItems_action");

                    b.Navigation("Approval");

                    b.Navigation("SystemCode");
                });

            modelBuilder.Entity("zuHause.Models.CarouselImage", b =>
                {
                    b.HasOne("zuHause.Models.Page", "PageCodeNavigation")
                        .WithMany("CarouselImages")
                        .HasForeignKey("PageCode")
                        .HasConstraintName("FK_carouselImages_page");

                    b.Navigation("PageCodeNavigation");
                });

            modelBuilder.Entity("zuHause.Models.Chatroom", b =>
                {
                    b.HasOne("zuHause.Models.Member", "InitiatorMember")
                        .WithMany("ChatroomInitiatorMembers")
                        .HasForeignKey("InitiatorMemberId")
                        .IsRequired()
                        .HasConstraintName("FK_chatrooms_initiator");

                    b.HasOne("zuHause.Models.Member", "ParticipantMember")
                        .WithMany("ChatroomParticipantMembers")
                        .HasForeignKey("ParticipantMemberId")
                        .IsRequired()
                        .HasConstraintName("FK_chatrooms_participant");

                    b.HasOne("zuHause.Models.Property", "Property")
                        .WithMany("Chatrooms")
                        .HasForeignKey("PropertyId")
                        .HasConstraintName("FK_chatrooms_property");

                    b.Navigation("InitiatorMember");

                    b.Navigation("ParticipantMember");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("zuHause.Models.ChatroomMessage", b =>
                {
                    b.HasOne("zuHause.Models.Chatroom", "Chatroom")
                        .WithMany("ChatroomMessages")
                        .HasForeignKey("ChatroomId")
                        .IsRequired()
                        .HasConstraintName("FK_chatroomMessages_chatroom");

                    b.HasOne("zuHause.Models.Member", "SenderMember")
                        .WithMany("ChatroomMessages")
                        .HasForeignKey("SenderMemberId")
                        .IsRequired()
                        .HasConstraintName("FK_chatroomMessages_sender");

                    b.Navigation("Chatroom");

                    b.Navigation("SenderMember");
                });

            modelBuilder.Entity("zuHause.Models.Contract", b =>
                {
                    b.HasOne("zuHause.Models.RentalApplication", "RentalApplication")
                        .WithMany("Contracts")
                        .HasForeignKey("RentalApplicationId")
                        .HasConstraintName("FK_contracts_rentalApp");

                    b.HasOne("zuHause.Models.ContractTemplate", "Template")
                        .WithMany("Contracts")
                        .HasForeignKey("TemplateId")
                        .HasConstraintName("FK_contracts_template");

                    b.Navigation("RentalApplication");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("zuHause.Models.ContractComment", b =>
                {
                    b.HasOne("zuHause.Models.Contract", "Contract")
                        .WithMany("ContractComments")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_contractComments_contract");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("zuHause.Models.ContractCustomField", b =>
                {
                    b.HasOne("zuHause.Models.Contract", "Contract")
                        .WithMany("ContractCustomFields")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_contractCustomFields_contract");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("zuHause.Models.ContractFurnitureItem", b =>
                {
                    b.HasOne("zuHause.Models.Contract", "Contract")
                        .WithMany("ContractFurnitureItems")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_contractFurnitureItems_contract");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("zuHause.Models.ContractSignature", b =>
                {
                    b.HasOne("zuHause.Models.Contract", "Contract")
                        .WithMany("ContractSignatures")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_contractSignatures_contract");

                    b.HasOne("zuHause.Models.Member", "Signer")
                        .WithMany("ContractSignatures")
                        .HasForeignKey("SignerId")
                        .IsRequired()
                        .HasConstraintName("FK_contractSignatures_member");

                    b.Navigation("Contract");

                    b.Navigation("Signer");
                });

            modelBuilder.Entity("zuHause.Models.CustomerServiceTicket", b =>
                {
                    b.HasOne("zuHause.Models.Contract", "Contract")
                        .WithMany("CustomerServiceTickets")
                        .HasForeignKey("ContractId")
                        .HasConstraintName("FK_custTickets_contract");

                    b.HasOne("zuHause.Models.FurnitureOrder", "FurnitureOrder")
                        .WithMany("CustomerServiceTickets")
                        .HasForeignKey("FurnitureOrderId")
                        .HasConstraintName("FK_custTickets_furnOrder");

                    b.HasOne("zuHause.Models.Member", "Member")
                        .WithMany("CustomerServiceTickets")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_custTickets_member");

                    b.HasOne("zuHause.Models.Property", "Property")
                        .WithMany("CustomerServiceTickets")
                        .HasForeignKey("PropertyId")
                        .HasConstraintName("FK_custTickets_property");

                    b.Navigation("Contract");

                    b.Navigation("FurnitureOrder");

                    b.Navigation("Member");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("zuHause.Models.District", b =>
                {
                    b.HasOne("zuHause.Models.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FK_districts_cities");

                    b.Navigation("City");
                });

            modelBuilder.Entity("zuHause.Models.Favorite", b =>
                {
                    b.HasOne("zuHause.Models.Member", "Member")
                        .WithMany("Favorites")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_favorites_member");

                    b.HasOne("zuHause.Models.Property", "Property")
                        .WithMany("Favorites")
                        .HasForeignKey("PropertyId")
                        .IsRequired()
                        .HasConstraintName("FK_favorites_property");

                    b.Navigation("Member");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("zuHause.Models.FileApproval", b =>
                {
                    b.HasOne("zuHause.Models.UserUpload", "Upload")
                        .WithMany("FileApprovals")
                        .HasForeignKey("UploadId")
                        .IsRequired()
                        .HasConstraintName("FK_fileApprovals_upload");

                    b.Navigation("Upload");
                });

            modelBuilder.Entity("zuHause.Models.FurnitureCart", b =>
                {
                    b.HasOne("zuHause.Models.Member", "Member")
                        .WithMany("FurnitureCarts")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_furnitureCarts_member");

                    b.HasOne("zuHause.Models.Property", "Property")
                        .WithMany("FurnitureCarts")
                        .HasForeignKey("PropertyId")
                        .HasConstraintName("FK_furnitureCarts_property");

                    b.Navigation("Member");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("zuHause.Models.FurnitureCartItem", b =>
                {
                    b.HasOne("zuHause.Models.FurnitureCart", "Cart")
                        .WithMany("FurnitureCartItems")
                        .HasForeignKey("CartId")
                        .IsRequired()
                        .HasConstraintName("FK_furnitureCartItems_cart");

                    b.HasOne("zuHause.Models.FurnitureProduct", "Product")
                        .WithMany("FurnitureCartItems")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_furnitureCartItems_product");

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("zuHause.Models.FurnitureCategory", b =>
                {
                    b.HasOne("zuHause.Models.FurnitureCategory", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_furnCate_parent");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("zuHause.Models.FurnitureInventory", b =>
                {
                    b.HasOne("zuHause.Models.FurnitureProduct", "Product")
                        .WithMany("FurnitureInventories")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_furnitureInventory_product");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("zuHause.Models.FurnitureOrder", b =>
                {
                    b.HasOne("zuHause.Models.Member", "Member")
                        .WithMany("FurnitureOrders")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_furnitureOrders_member");

                    b.HasOne("zuHause.Models.Property", "Property")
                        .WithMany("FurnitureOrders")
                        .HasForeignKey("PropertyId")
                        .HasConstraintName("FK_furnitureOrders_property");

                    b.Navigation("Member");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("zuHause.Models.FurnitureOrderHistory", b =>
                {
                    b.HasOne("zuHause.Models.FurnitureOrder", "Order")
                        .WithMany("FurnitureOrderHistories")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_furnitureOrderHistory_order");

                    b.HasOne("zuHause.Models.FurnitureProduct", "Product")
                        .WithMany("FurnitureOrderHistories")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_furnitureOrderHistory_product");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("zuHause.Models.FurnitureOrderItem", b =>
                {
                    b.HasOne("zuHause.Models.FurnitureOrder", "Order")
                        .WithMany("FurnitureOrderItems")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_furnitureOrderItems_order");

                    b.HasOne("zuHause.Models.FurnitureProduct", "Product")
                        .WithMany("FurnitureOrderItems")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_furnitureOrderItems_product");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("zuHause.Models.FurnitureProduct", b =>
                {
                    b.HasOne("zuHause.Models.FurnitureCategory", "Category")
                        .WithMany("FurnitureProducts")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_furnitureProducts_category");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("zuHause.Models.FurnitureRentalContract", b =>
                {
                    b.HasOne("zuHause.Models.FurnitureOrder", "Order")
                        .WithMany("FurnitureRentalContracts")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_furnitureRentalContracts_order");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("zuHause.Models.Image", b =>
                {
                    b.HasOne("zuHause.Models.Member", null)
                        .WithMany()
                        .HasForeignKey("UploadedByMemberId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_images_members");
                });

            modelBuilder.Entity("zuHause.Models.InventoryEvent", b =>
                {
                    b.HasOne("zuHause.Models.FurnitureProduct", "Product")
                        .WithMany("InventoryEvents")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_inventoryEvents_product");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("zuHause.Models.Member", b =>
                {
                    b.HasOne("zuHause.Models.MemberType", "MemberType")
                        .WithMany("Members")
                        .HasForeignKey("MemberTypeId")
                        .HasConstraintName("FK_members_memberType");

                    b.HasOne("zuHause.Models.City", "PrimaryRentalCity")
                        .WithMany("MemberPrimaryRentalCities")
                        .HasForeignKey("PrimaryRentalCityId")
                        .HasConstraintName("FK_members_primaryCity");

                    b.HasOne("zuHause.Models.District", "PrimaryRentalDistrict")
                        .WithMany("MemberPrimaryRentalDistricts")
                        .HasForeignKey("PrimaryRentalDistrictId")
                        .HasConstraintName("FK_members_primaryDistrict");

                    b.HasOne("zuHause.Models.City", "ResidenceCity")
                        .WithMany("MemberResidenceCities")
                        .HasForeignKey("ResidenceCityId")
                        .HasConstraintName("FK_members_resCity");

                    b.HasOne("zuHause.Models.District", "ResidenceDistrict")
                        .WithMany("MemberResidenceDistricts")
                        .HasForeignKey("ResidenceDistrictId")
                        .HasConstraintName("FK_members_resDistrict");

                    b.Navigation("MemberType");

                    b.Navigation("PrimaryRentalCity");

                    b.Navigation("PrimaryRentalDistrict");

                    b.Navigation("ResidenceCity");

                    b.Navigation("ResidenceDistrict");
                });

            modelBuilder.Entity("zuHause.Models.MemberVerification", b =>
                {
                    b.HasOne("zuHause.Models.Member", "Member")
                        .WithMany("MemberVerifications")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_memberVerifications_member");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("zuHause.Models.MessagePlacement", b =>
                {
                    b.HasOne("zuHause.Models.SiteMessage", "Message")
                        .WithMany("MessagePlacements")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_msgPlacements_message");

                    b.Navigation("Message");
                });

            modelBuilder.Entity("zuHause.Models.OrderEvent", b =>
                {
                    b.HasOne("zuHause.Models.FurnitureOrder", "Order")
                        .WithMany("OrderEvents")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_orderEvents_order");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("zuHause.Models.Property", b =>
                {
                    b.HasOne("zuHause.Models.Member", "LandlordMember")
                        .WithMany("Properties")
                        .HasForeignKey("LandlordMemberId")
                        .IsRequired()
                        .HasConstraintName("FK_properties_landlord");

                    b.HasOne("zuHause.Models.ListingPlan", "ListingPlan")
                        .WithMany("Properties")
                        .HasForeignKey("ListingPlanId")
                        .HasConstraintName("FK_properties_listingPlan");

                    b.Navigation("LandlordMember");

                    b.Navigation("ListingPlan");
                });

            modelBuilder.Entity("zuHause.Models.PropertyComplaint", b =>
                {
                    b.HasOne("zuHause.Models.Member", "Complainant")
                        .WithMany("PropertyComplaintComplainants")
                        .HasForeignKey("ComplainantId")
                        .IsRequired()
                        .HasConstraintName("FK_propComplaints_complainant");

                    b.HasOne("zuHause.Models.Member", "Landlord")
                        .WithMany("PropertyComplaintLandlords")
                        .HasForeignKey("LandlordId")
                        .IsRequired()
                        .HasConstraintName("FK_propComplaints_landlord");

                    b.HasOne("zuHause.Models.Property", "Property")
                        .WithMany("PropertyComplaints")
                        .HasForeignKey("PropertyId")
                        .IsRequired()
                        .HasConstraintName("FK_propComplaints_property");

                    b.Navigation("Complainant");

                    b.Navigation("Landlord");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("zuHause.Models.PropertyEquipmentCategory", b =>
                {
                    b.HasOne("zuHause.Models.PropertyEquipmentCategory", "ParentCategory")
                        .WithMany("InverseParentCategory")
                        .HasForeignKey("ParentCategoryId")
                        .HasConstraintName("FK_propEquipCate_parent");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("zuHause.Models.PropertyEquipmentRelation", b =>
                {
                    b.HasOne("zuHause.Models.PropertyEquipmentCategory", "Category")
                        .WithMany("PropertyEquipmentRelations")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_propEquipRel_category");

                    b.HasOne("zuHause.Models.Property", "Property")
                        .WithMany("PropertyEquipmentRelations")
                        .HasForeignKey("PropertyId")
                        .IsRequired()
                        .HasConstraintName("FK_propEquipRel_property");

                    b.Navigation("Category");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("zuHause.Models.PropertyImage", b =>
                {
                    b.HasOne("zuHause.Models.Property", "Property")
                        .WithMany("PropertyImages")
                        .HasForeignKey("PropertyId")
                        .IsRequired()
                        .HasConstraintName("FK_propertyImages_property");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("zuHause.Models.RentalApplication", b =>
                {
                    b.HasOne("zuHause.Models.Member", "Member")
                        .WithMany("RentalApplications")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_rentalApplications_member");

                    b.HasOne("zuHause.Models.Property", "Property")
                        .WithMany("RentalApplications")
                        .HasForeignKey("PropertyId")
                        .IsRequired()
                        .HasConstraintName("FK_rentalApplications_property");

                    b.Navigation("Member");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("zuHause.Models.RenterPost", b =>
                {
                    b.HasOne("zuHause.Models.Member", "Member")
                        .WithMany("RenterPosts")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_renterPosts_member");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("zuHause.Models.RenterPostReply", b =>
                {
                    b.HasOne("zuHause.Models.Member", "LandlordMember")
                        .WithMany("RenterPostReplies")
                        .HasForeignKey("LandlordMemberId")
                        .IsRequired()
                        .HasConstraintName("FK_renterPostReplies_landlord");

                    b.HasOne("zuHause.Models.RenterPost", "Post")
                        .WithMany("RenterPostReplies")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_renterPostReplies_post");

                    b.Navigation("LandlordMember");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("zuHause.Models.RenterRequirementRelation", b =>
                {
                    b.HasOne("zuHause.Models.RenterPost", "Post")
                        .WithMany("RenterRequirementRelations")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_rentReqRel_post");

                    b.HasOne("zuHause.Models.RenterRequirementList", "Requirement")
                        .WithMany("RenterRequirementRelations")
                        .HasForeignKey("RequirementId")
                        .IsRequired()
                        .HasConstraintName("FK_rentReqRel_requirement");

                    b.Navigation("Post");

                    b.Navigation("Requirement");
                });

            modelBuilder.Entity("zuHause.Models.SearchHistory", b =>
                {
                    b.HasOne("zuHause.Models.Member", "Member")
                        .WithMany("SearchHistories")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_searchHistory_member");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("zuHause.Models.SystemCode", b =>
                {
                    b.HasOne("zuHause.Models.SystemCodeCategory", "CodeCategoryNavigation")
                        .WithMany("SystemCodes")
                        .HasForeignKey("CodeCategory")
                        .IsRequired()
                        .HasConstraintName("FK_systemCodes_category");

                    b.Navigation("CodeCategoryNavigation");
                });

            modelBuilder.Entity("zuHause.Models.SystemMessage", b =>
                {
                    b.HasOne("zuHause.Models.Admin", "Admin")
                        .WithMany("SystemMessages")
                        .HasForeignKey("AdminId")
                        .IsRequired()
                        .HasConstraintName("FK_systemMessages_admin");

                    b.HasOne("zuHause.Models.Member", "Receiver")
                        .WithMany("SystemMessages")
                        .HasForeignKey("ReceiverId")
                        .HasConstraintName("FK_systemMessages_receiver");

                    b.Navigation("Admin");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("zuHause.Models.UserNotification", b =>
                {
                    b.HasOne("zuHause.Models.Member", "Receiver")
                        .WithMany("UserNotifications")
                        .HasForeignKey("ReceiverId")
                        .IsRequired()
                        .HasConstraintName("FK_userNotifications_receiver");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("zuHause.Models.UserUpload", b =>
                {
                    b.HasOne("zuHause.Models.Member", "Member")
                        .WithMany("UserUploads")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_userUploads_member");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("zuHause.Models.Admin", b =>
                {
                    b.Navigation("SystemMessages");
                });

            modelBuilder.Entity("zuHause.Models.AdminRole", b =>
                {
                    b.Navigation("Admins");
                });

            modelBuilder.Entity("zuHause.Models.Approval", b =>
                {
                    b.Navigation("ApprovalItems");
                });

            modelBuilder.Entity("zuHause.Models.Chatroom", b =>
                {
                    b.Navigation("ChatroomMessages");
                });

            modelBuilder.Entity("zuHause.Models.City", b =>
                {
                    b.Navigation("Districts");

                    b.Navigation("MemberPrimaryRentalCities");

                    b.Navigation("MemberResidenceCities");
                });

            modelBuilder.Entity("zuHause.Models.Contract", b =>
                {
                    b.Navigation("ContractComments");

                    b.Navigation("ContractCustomFields");

                    b.Navigation("ContractFurnitureItems");

                    b.Navigation("ContractSignatures");

                    b.Navigation("CustomerServiceTickets");
                });

            modelBuilder.Entity("zuHause.Models.ContractTemplate", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("zuHause.Models.District", b =>
                {
                    b.Navigation("MemberPrimaryRentalDistricts");

                    b.Navigation("MemberResidenceDistricts");
                });

            modelBuilder.Entity("zuHause.Models.FurnitureCart", b =>
                {
                    b.Navigation("FurnitureCartItems");
                });

            modelBuilder.Entity("zuHause.Models.FurnitureCategory", b =>
                {
                    b.Navigation("FurnitureProducts");

                    b.Navigation("InverseParent");
                });

            modelBuilder.Entity("zuHause.Models.FurnitureOrder", b =>
                {
                    b.Navigation("CustomerServiceTickets");

                    b.Navigation("FurnitureOrderHistories");

                    b.Navigation("FurnitureOrderItems");

                    b.Navigation("FurnitureRentalContracts");

                    b.Navigation("OrderEvents");
                });

            modelBuilder.Entity("zuHause.Models.FurnitureProduct", b =>
                {
                    b.Navigation("FurnitureCartItems");

                    b.Navigation("FurnitureInventories");

                    b.Navigation("FurnitureOrderHistories");

                    b.Navigation("FurnitureOrderItems");

                    b.Navigation("InventoryEvents");
                });

            modelBuilder.Entity("zuHause.Models.ListingPlan", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("zuHause.Models.Member", b =>
                {
                    b.Navigation("Approvals");

                    b.Navigation("ChatroomInitiatorMembers");

                    b.Navigation("ChatroomMessages");

                    b.Navigation("ChatroomParticipantMembers");

                    b.Navigation("ContractSignatures");

                    b.Navigation("CustomerServiceTickets");

                    b.Navigation("Favorites");

                    b.Navigation("FurnitureCarts");

                    b.Navigation("FurnitureOrders");

                    b.Navigation("MemberVerifications");

                    b.Navigation("Properties");

                    b.Navigation("PropertyComplaintComplainants");

                    b.Navigation("PropertyComplaintLandlords");

                    b.Navigation("RentalApplications");

                    b.Navigation("RenterPostReplies");

                    b.Navigation("RenterPosts");

                    b.Navigation("SearchHistories");

                    b.Navigation("SystemMessages");

                    b.Navigation("UserNotifications");

                    b.Navigation("UserUploads");
                });

            modelBuilder.Entity("zuHause.Models.MemberType", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("zuHause.Models.Page", b =>
                {
                    b.Navigation("CarouselImages");
                });

            modelBuilder.Entity("zuHause.Models.Property", b =>
                {
                    b.Navigation("Approvals");

                    b.Navigation("Chatrooms");

                    b.Navigation("CustomerServiceTickets");

                    b.Navigation("Favorites");

                    b.Navigation("FurnitureCarts");

                    b.Navigation("FurnitureOrders");

                    b.Navigation("PropertyComplaints");

                    b.Navigation("PropertyEquipmentRelations");

                    b.Navigation("PropertyImages");

                    b.Navigation("RentalApplications");
                });

            modelBuilder.Entity("zuHause.Models.PropertyEquipmentCategory", b =>
                {
                    b.Navigation("InverseParentCategory");

                    b.Navigation("PropertyEquipmentRelations");
                });

            modelBuilder.Entity("zuHause.Models.RentalApplication", b =>
                {
                    b.Navigation("ApplicationStatusLogs");

                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("zuHause.Models.RenterPost", b =>
                {
                    b.Navigation("RenterPostReplies");

                    b.Navigation("RenterRequirementRelations");
                });

            modelBuilder.Entity("zuHause.Models.RenterRequirementList", b =>
                {
                    b.Navigation("RenterRequirementRelations");
                });

            modelBuilder.Entity("zuHause.Models.SiteMessage", b =>
                {
                    b.Navigation("MessagePlacements");
                });

            modelBuilder.Entity("zuHause.Models.SystemCode", b =>
                {
                    b.Navigation("ApprovalItems");

                    b.Navigation("Approvals");
                });

            modelBuilder.Entity("zuHause.Models.SystemCodeCategory", b =>
                {
                    b.Navigation("SystemCodes");
                });

            modelBuilder.Entity("zuHause.Models.UserUpload", b =>
                {
                    b.Navigation("FileApprovals");
                });
#pragma warning restore 612, 618
        }
    }
}
